name: Build and Release Go Application

on:
  push:
    branches:
      - master

jobs:
  build-and-release:
    name: Build and Create Pre-Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, macos]
        arch: [amd64]

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Go environment
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Build binaries
        run: |
          cd src
          mkdir -p build
          if [ "{{ matrix.os }}" = "windows" ]; then
            go build -o ../build/brodsky-{{ matrix.os }}-{{ matrix.arch }}.exe
          else
            go build -o ../build/brodsky-{{ matrix.os }}-{{ matrix.arch }}
          fi
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}

      - name: Get names for release and tag
        id: get_names
        run: |
          RELEASE_NAME_TS=$(date '+%Y-%m-%d %H:%M:%S')
          TAG_NAME_TS=$(date '+%Y%m%d%H%M%S')
          
          echo "release_name=Pre-release $RELEASE_NAME_TS" >> $GITHUB_OUTPUT
          echo "tag_name=pre-release-$TAG_NAME_TS" >> $GITHUB_OUTPUT

      # Step 4: Create a GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_names.outputs.tag_name }}
          name: ${{ steps.get_names.outputs.release_name }}
          prerelease: true
          make_latest: 'true'
          files: |
            build/brodsky-linux-amd64
            build/brodsky-darwin-amd64
            build/brodsky-windows-amd64.exe
          token: ${{github.token}}
